module.exports = {
  env: {
    node: true,
    browser: true,
    es6: true,
    commonjs: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 6,
    sourceType: 'module',
    babelOptions: {
      presets: ['@babel/preset-react'],
    },
  },
  plugins: ['react'],
  settings: {
    'import/resolver': 'webpack',
    react: {
      createClass: 'createReactClass',
      pragma: 'React',
      version: 'detect',
      flowVersion: '0.53',
    },
  },
  extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended'],
  rules: {
    'no-unused-vars': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    'no-underscore-dangle': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-unused-vars': ['warn'],
    'no-useless-constructor': ['warn'],
    'react/no-unused-state': ['warn'],
    'react/state-in-constructor': ['error', 'always'],
    'react/no-deprecated': ['error'],
    'no-plusplus': ['error'],
    'prefer-template': ['error'],
    'jsx-quotes': ['error', 'prefer-single'],
    'react/prop-types': [
      'error',
      { ignore: ['history', 'location', 'match', 'name', 'className', 'style', 'children'] },
    ],
    'prefer-const': [
      'error',
      {
        destructuring: 'any',
        ignoreReadBeforeAssign: false,
      },
    ],
    'lines-between-class-members': [
      'error',
      'always',
      {
        exceptAfterSingleLine: true,
      },
    ],
    'react/static-property-placement': [
      'error',
      'property assignment',
      {
        propTypes: 'static public field',
        defaultProps: 'static public field',
      },
    ],
    'react/sort-comp': [
      'error',
      {
        order: [
          'proptypes',
          'static-variables',
          'static-methods',
          'instance-variables',
          'lifecycle',
          'init',
          'everything-else',
          'instance-methods',
          'rendering',
        ],
        groups: {
          proptypes: ['propTypes', 'defaultProps'],
          init: ['init'],
          lifecycle: [
            'displayName',
            'contextTypes',
            'childContextTypes',
            'mixins',
            'statics',
            'constructor',
            'getDefaultProps',
            'getInitialState',
            'state',
            'getChildContext',
            'getDerivedStateFromProps',
            'componentWillMount',
            'UNSAFE_componentWillMount',
            'componentDidMount',
            'componentWillReceiveProps',
            'UNSAFE_componentWillReceiveProps',
            'shouldComponentUpdate',
            'componentWillUpdate',
            'UNSAFE_componentWillUpdate',
            'getSnapshotBeforeUpdate',
            'componentDidUpdate',
            'componentDidCatch',
            'componentWillUnmount',
            'componentDidCatch',
          ],
          rendering: ['/^render.+$/', 'render'],
        },
      },
    ],
  },
};
